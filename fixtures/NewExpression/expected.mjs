import {_power_} from "@power-assert/runtime";
const _pasrt1 = _power_(assert, null, "assert(new Date())");
const _parg1 = _pasrt1.recorder(0);
const _pasrt2 = _power_(assert, null, "assert(new foo.bar.Baz())");
const _parg2 = _pasrt2.recorder(0);
const _pasrt3 = _power_(assert, null, "assert(!(new Array(foo, bar, baz)))");
const _parg3 = _pasrt3.recorder(0);
const _pasrt4 = _power_(assert.notEqual, assert, "assert.notEqual(new Date(), new Date('2013-01-12'))");
const _parg4 = _pasrt4.recorder(0);
const _parg5 = _pasrt4.recorder(1);
import assert from 'node:assert/strict';
_pasrt1.run(_parg1.rec(new Date(), "arguments/0", 7));
_pasrt2.run(_parg2.rec(new (_parg2.tap(_parg2.tap(foo, "arguments/0/callee/object/object", 11).bar, "arguments/0/callee/object", 15).Baz)(), "arguments/0", 7));
_pasrt3.run(_parg3.rec(!_parg3.tap(new Array(_parg3.tap(foo, "arguments/0/argument/arguments/0", 19), _parg3.tap(bar, "arguments/0/argument/arguments/1", 24), _parg3.tap(baz, "arguments/0/argument/arguments/2", 29)), "arguments/0/argument", 9), "arguments/0", 7));
_pasrt4.run(_parg4.rec(new Date(), "arguments/0", 16), _parg5.rec(new Date(_parg5.tap('2013-01-12', "arguments/1/arguments/0", 37)), "arguments/1", 28));
